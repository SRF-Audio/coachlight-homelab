- name: Local Host Preparation
  hosts: local
  gather_facts: true

  pre_tasks:
    - name: Check if 1password CLI is installed
      ansible.builtin.command: op --version
      register: op_installed
      failed_when: op_installed.rc != 0
      changed_when: false
      delegate_to: localhost

    - name: Inject secrets for proxmox group
      ansible.builtin.command: >
        op inject -i group_vars/proxmox/vault.yml.tpl -o group_vars/proxmox/vault.yml
      delegate_to: localhost
      args:
        creates: group_vars/proxmox/vault.yml
      register: proxmox_inject
      changed_when: proxmox_inject.rc == 0 and proxmox_inject.stdout != ""
      failed_when: proxmox_inject.rc != 0

    - name: Inject secrets for vms group
      ansible.builtin.command: >
        op inject -i group_vars/vms/vault.yml.tpl -o group_vars/vms/vault.yml
      delegate_to: localhost
      args:
        creates: group_vars/vms/vault.yml
      register: vms_inject
      changed_when: vms_inject.rc == 0 and vms_inject.stdout != ""
      failed_when: vms_inject.rc != 0

    - name: Inject secrets for nas group
      ansible.builtin.command: >
        op inject -i group_vars/nas/vault.yml.tpl -o group_vars/nas/vault.yml
      delegate_to: localhost
      args:
        creates: group_vars/nas/vault.yml
      register: nas_inject
      changed_when: nas_inject.rc == 0 and nas_inject.stdout != ""
      failed_when: nas_inject.rc != 0

    - name: Check if Tailscale is installed on Ansible host by calling tailscale status
      ansible.builtin.command: tailscale status
      register: tailscale_status
      changed_when: false
      failed_when: tailscale_status.rc != 0

    - name: Wait for Tailscale to be connected
      ansible.builtin.command: tailscale status
      register: tailscale_status
      until: tailscale_status.rc == 0 and ('stopped' not in tailscale_status.stdout)
      retries: 5
      delay: 5
      changed_when: false
      failed_when: tailscale_status.rc != 0 or 'stopped' in tailscale_status.stdout
      when: "'nas' not in group_names"

    - name: Wait for Tailscale to be connected on Synology NAS
      ansible.builtin.command: /usr/local/bin/tailscale status
      register: tailscale_status
      until: tailscale_status.rc == 0 and ('stopped' not in tailscale_status.stdout)
      retries: 5
      delay: 5
      changed_when: false
      failed_when: tailscale_status.rc != 0 or 'stopped' in tailscale_status.stdout
      when: "'nas' in group_names"

- name: ProxMox MX
  hosts: proxmox
  gather_facts: true
  roles:
    - proxmox_mx
  vars:
    proxmox_user: stephenfroeber
